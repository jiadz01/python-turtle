'''PeppaPig_1.py 佩奇小猪  在从网上下载的程序基础上,进行了改写、优化并对每条语句进行注释.
本程序要导入自建的selfTurtleModule.py模块,它应与本程序同在一个文件目录内,导入画海龟坐标图函数:coordinate().
这是按画图前后顺序定位画法,前面部份将决定后续图形的具体坐标.
在程序中可添加语句stamp() ,在局部每绘画起始位留下画笔印章,以便观察和分析绘图起点坐标,及构图过程.
其进一步优化版本详见:PeppaPig_2.py,PeppaPig_3.py
'''
import turtle as t #创建一个turtle对象实例t,名称t将直接绑定到所导入的模块, 调用的函数或对象前加(t.)
from selfTurtleModule import coordinate  #从selfTurtleModule.py模块中导入画海龟坐标图函数coordinate()

coordinate() #绘出turtle绘画窗口默认标准坐标线,可用#注释掉,不执行
t.pensize(4) #画笔粗细尺寸设置4
t.color((1.0,0.61,0.76),"pink") #设置绘制线条色(1.0,0.61,0.76  颜色RGB模式1.0的值)和图形内充填颜色pink
t.speed(1) # 画笔画图速度设置,速度关系按1,2,...,9,0排列,1最慢(初学时方便观察),最快是0,可据自已要求修改

# 画鼻子  鼻孔处的椭园形
t.pu() # 抬起画笔,这样移动画笔到下一个绘图起始点的过程中不留笔迹线条,还可用penup(),up()
t.goto(-100,100)  # 移动海龟画笔到坐标x=-100,y=100位置准备绘图,还可用setpos()
t.pd() # 放下画笔准备画图, 还可用pendown() ; down()
t.seth(-30) #将画笔朝向转到-30(负数即顺时针方向)角度位,还可用setheading()
t.begin_fill() #下边画图将充填颜色
a = 0.4 #初始化变量a
for i in range(120): #用for循环画120次小段线,构画椭园形,原理可查selfTurtleModule.py中的画椭园形函数turtleEllips()
    if 0 <= i <30 or 60 <=i <90:
        a = a + 0.08 #在此条件下每循环1次画线的长度递增0.08
        t.lt(3) # 画笔朝向左转3度
        t.fd(a) # 向前走a步,画出椭园一小段
    else:
        a = a -0.08 #在此条件下每循环1次画线的长度递减0.08
        t.lt(3) # 画笔朝向左转3度
        t.fd(a) # 向前走a步,画出椭园一小段
t.end_fill() #在begin_fill()之间的所有绘图完成填色

#画鼻孔  左边鼻孔
t.fillcolor(0.63,0.32,0.18) #设置绘制图形内充填颜色(0.63,0.32,0.18  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(25) #上移25
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(8) #右移8,到画左边鼻孔起始点,以上移动均没有笔迹线条
t.pd() #放下画笔准备画图
t.begin_fill() #下边画图将充填颜色
t.circle(5) #左边鼻孔,反时针绘制圆：半径=5,绘园时角度是黙认值360,画完园后画笔回到启始点
t.end_fill() #在begin_fill()之间的所有绘图完成填色
#右边鼻孔
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(18) #右移18,到画右边鼻孔起始点
t.pd() #放下画笔准备画图
t.begin_fill() #下边画图将充填颜色
t.circle(5) #右边鼻孔,反时针绘制圆：半径=5,绘园时角度是黙认值360,画完园后画笔回到启始点
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 绘头面部
t.color((1.0,0.61,0.76),"pink") #设置绘制线条色(1.0,0.61,0.76  颜色RGB模式1.0的值)和图形内充填颜色pink
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(41) #上移41
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(3) #右移3,到画头部的起始点,画笔方向朝右
t.pd() #放下画笔准备画图
t.begin_fill() #下边画图将充填颜色
t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(-300, 30) #绘制圆弧线：半径=300,负数即是顺时针方向绘画,弧度=30
t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(-100, 60) #接着上条弧线终点绘制圆弧线：半径=100,负数即是顺时针方向绘画,弧度=60
t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(-82, 100) #接着上条弧线终点绘制圆弧线：半径=82,负数即是顺时针方向绘画,弧度=100
t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(-150, 20) #接着上条弧线终点绘制圆弧线：半径=150,负数即是顺时针方向绘画,弧度=20
t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(-60, 95) #接着上条弧线终点绘制圆弧线：半径=60,负数即是顺时针方向绘画,弧度=95
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.goto(-100,100) # 移动海龟画笔到坐标x=-100,y=100位置,到前边画鼻子的椭园形起始点
t.pd() #放下画笔准备画图
t.seth(-30) #将画笔朝向转到-30(负数即顺时针方向)角度位
a = 0.4
for i in range(60): #用for循环画60次小段线,重描上面已画好的椭园形一半,以便头部填充颜色完整正确
    if 0 <= i < 30 or 60 <=i <90:
        a = a + 0.08
        t.lt(3)
        t.fd(a)
    else:
        a = a - 0.08
        t.lt(3)
        t.fd(a)
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 耳朵  画面左边耳朵
t.color((1.0,0.61,0.76),"pink") #设置绘制线条色(1.0,0.61,0.76  颜色RGB模式1.0的值)和图形内充填颜色pink
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(-7) #负数为退步,即向下移动7
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(70) #向右移动70
t.pd() #放下画笔准备画左边耳朵图
t.seth(100) #将画笔朝向转到100角度位,向上稍偏左点
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.begin_fill() #下边画图将充填颜色
t.circle(-50,50) #绘制圆弧线：半径=50,负数即是顺时针方向绘画,弧度=50
t.circle(-10,120) #接着上条弧线终点绘制圆弧线：半径=10,负数即是顺时针方向绘画,弧度=120
t.circle(-50,54) #接着上条弧线终点绘制圆弧线：半径=50,负数即是顺时针方向绘画,弧度=54
t.end_fill() #在begin_fill()之间的所有绘图完成填色
#画面右边耳朵
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(12) #向下移动12
t.seth(0) #将画笔朝向转到270角度位,向右
t.fd(30) #向右移动30
t.seth(90) #将画笔朝向转到90角度位,向上
t.pd() #放下画笔准备画右边耳朵图
t.begin_fill() #下边画图将充填颜色
t.circle(-50,50) #绘制圆弧线：半径=50,负数即是顺时针方向绘画,弧度=50
t.circle(-10,120) #接着上条弧线终点绘制圆弧线：半径=10,负数即是顺时针方向绘画,弧度=120
t.circle(-50,54) #接着上条弧线终点绘制圆弧线：半径=50,负数即是顺时针方向绘画,弧度=54
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 眼睛  画面左边眼睛
t.color((1.0,0.61,0.76),"white") #设置绘制线条色(1.0,0.61,0.76  颜色RGB模式1.0的值)和图形内充填颜色white
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(20) #向下移动20
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(-95) #负数即是后退,即是向左移动95
t.pd() #放下画笔准备画左边眼睛
t.begin_fill() #下边画图将充填颜色
t.circle(15) #绘制圆：半径=15,正数即是反时针方向绘画
t.end_fill() #在begin_fill()之间的所有绘图完成填色
#画面左边眼珠
t.color("black") #设置绘制线条色和图形内充填颜色black
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(12) #向上移动12
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(-3) #负数即是后退,即是向左移动3
t.pd() #放下画笔准备画左边眼珠
t.begin_fill() #下边画图将充填颜色
t.circle(3) #绘制圆：半径=3,正数即是反时针方向绘画
t.end_fill() #在begin_fill()之间的所有绘图完成填色
#画面右边眼睛
t.color((1.0,0.61,0.76),"white") #设置绘制线条色(1.0,0.61,0.76  颜色RGB模式1.0的值)和图形内充填颜色white
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(25) #向下移动25
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(40) #向右移动40
t.pd() #放下画笔准备画右边眼睛
t.begin_fill()#下边画图将充填颜色
t.circle(15) #绘制圆：半径=15,正数即是反时针方向绘画
t.end_fill() #在begin_fill()之间的所有绘图完成填色
#画面右边眼珠
t.color("black") #设置绘制线条色和图形内充填颜色black
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(12) #向上移动12
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(-3) #负数即是后退,即是向左移动3
t.pd() #放下画笔准备画右边眼珠
t.begin_fill() #下边画图将充填颜色
t.circle(3) #绘制圆：半径=3,正数即是反时针方向绘画
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 画腮帮子
t.color((1.0,0.61,0.76)) #设置绘制线条色和图形内充填颜色(1.0,0.61,0.76  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(95) #向下移动95
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(65) #向右移动65
t.pd() #放下画笔准备画腮帮子
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.begin_fill() #下边画图将充填颜色
t.circle(30) #绘制圆：半径=30,正数即是反时针方向绘画
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 画嘴巴
t.color(0.94,0.27,0.08) #设置绘制线条色和图形内充填颜色(0.94,0.27,0.08  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(15) #向上移动15
t.seth(180) #将画笔朝向转到180角度位,向左
t.fd(100) #向左移动100
t.pd() #放下画笔准备画嘴巴
t.seth(-80) #将画笔朝向转到-80(负数即顺时针方向)角度位，等效用seth(280)
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(40,120) #绘制圆弧线：半径=40,正数即是反时针方向绘画,弧度=120,画嘴巴

# 画身体
t.color("red",(1.0,0.39,0.28))  #设置绘制线条色red和图形内充填颜色(1.0,0.39,0.28  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(20) #向下移动20
t.seth(180) #将画笔朝向转到180角度位,向左
t.fd(78) #向左移动78
t.pd() #放下画笔准备画
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.begin_fill() #下边画图将充填颜色
t.seth(230) #将画笔朝向转到230角度位,向下偏左
t.circle(100,10) #绘制圆弧线：半径=100,正数即是反时针方向绘画,弧度=10
t.circle(300,30) #接着上条弧线终点绘制圆弧线：半径=300,正数即是反时针方向绘画,弧度=30
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(230) #向右移动230,绘直线
t.seth(90) #将画笔朝向转到90角度位,向上
t.circle(300,30) #绘制圆弧线：半径=300,正数即是反时针方向绘画,弧度=30
t.circle(100,7) #接着上条弧线终点绘制圆弧线：半径=100,正数即是反时针方向绘画,弧度=7
t.color((1.0,0.61,0.76),(1.0,0.39,0.39)) #设置绘制线条色(1.0,0.61,0.76)和图形内充填颜色(1.0,0.39,0.39  颜色RGB模式1.0的值)
t.seth(225) #将画笔朝向转到225角度位,向下偏左
t.circle(-80,63) #绘制圆弧线：半径=80,负数即是顺时针方向绘画,弧度=63
t.circle(-150,24) #接着上条弧线终点绘制圆弧线：半径=150,负数即是顺时针方向绘画,弧度=24
t.end_fill() #在begin_fill()之间的所有绘图完成填色

# 画手  画左边手
t.color((1.0,0.61,0.76)) #设置绘制线条色和图形内充填颜色(1.0,0.61,0.76  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(40) #向下移动40
t.seth(180) #将画笔朝向转到180角度位,向左
t.fd(20) #向左移动20
t.pd() #放下画笔准备画
t.seth(200) #将画笔朝向转到200角度位,向左偏下
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.circle(300,15) #绘制圆弧线：半径=300,正数即是反时针方向绘画,弧度=15
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(15) #向上移动15
t.pd() #放下画笔准备画
t.seth(-10) #将画笔朝向转到-10(负数即顺时针方向)角度位，等效用seth(350),向右偏下
t.circle(-20,90) #绘制圆弧线：半径=20,负数即是顺时针方向绘画,弧度=90
#画右边手
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(31) #向上移动31
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(234) #向右移动234
t.pd() #放下画笔准备画
t.seth(-20) #将画笔朝向转到-20(负数即顺时针方向)角度位，等效用seth(340),向右偏下
t.circle(-300,15) #绘制圆弧线：半径=300,负数即是顺时针方向绘画,弧度=15
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
#t.stamp()    ##绘画起始位留下画笔印章,以便观察和分析起点坐标,可用#注释掉,不执行
t.fd(18) #向上移动18
t.pd() #放下画笔准备画
t.seth(190) #将画笔朝向转到190角度位,向左稍偏下
t.circle(20,90) #绘制圆弧线：半径=20,正数即是反时针方向绘画,弧度=90

#画脚  画左边脚
t.pensize(10) #画笔粗细尺寸设置10
t.color((0.94,0.5,0.5)) #设置绘制线条色和图形内充填颜色(0.94,0.5,0.5  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(81) #向下移动83
t.seth(180) #将画笔朝向转到180角度位,向左
t.fd(180) #向左移动180
t.pd() #放下画笔准备画
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(40) #向下移动40，画线条
t.seth(180) #将画笔朝向转到180角度位,向左
t.color("black") #设置绘制线条色和图形内充填颜色black
t.pensize(15) #画笔粗细尺寸设置15
t.fd(20) #向左移动20，画线条
#画右边脚
t.pensize(10) #画笔粗细尺寸设置10
t.color((0.94,0.5,0.5)) #设置绘制线条色和图形内充填颜色(0.94,0.5,0.5  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(40) #向上移动40
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(90) #向右移动90
t.pd() #放下画笔准备画右边脚
t.seth(270) #将画笔朝向转到270角度位,向下
t.fd(40) #向下移动40，画线条
t.seth(180) #将画笔朝向转到180角度位,向左
t.color("black") #设置绘制线条色和图形内充填颜色black
t.pensize(15) #画笔粗细尺寸设置15
t.fd(20) #向左移动20，画线条

# 画尾巴
t.pensize(4) #画笔粗细尺寸设置4
t.color((1.0,0.61,0.76)) #设置绘制线条色和图形内充填颜色(1.0,0.61,0.76  颜色RGB模式1.0的值)
t.pu() #抬起画笔,移动画笔不留笔迹线条
t.seth(90) #将画笔朝向转到90角度位,向上
t.fd(72) #向上移动72
t.seth(0) #将画笔朝向转到0角度位,向右
t.fd(98) #向右移动95
t.pd() #放下画笔准备画尾巴
t.circle(70,20) #绘制圆弧线：半径=70,正数即是反时针方向绘画,弧度=20
t.circle(10,330) #接着上条弧线终点绘制圆弧线：半径=10,正数即是反时针方向绘画,弧度=330
t.circle(70,30) #接着上条弧线终点绘制圆弧线：半径=70,正数即是反时针方向绘画,弧度=30

#coordinate() ##在图形上再绘出turtle绘画窗口默认标准坐标线,便于观察理解，可用#注释掉,不执行
t.done() #还可用mainloop(),必须作为一个海龟绘图程序的结束语句